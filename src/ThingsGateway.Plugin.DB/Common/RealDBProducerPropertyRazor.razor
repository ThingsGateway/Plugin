@using BootstrapBlazor.Components
@using Microsoft.Extensions.Localization
@using ThingsGateway.Extension
@using ThingsGateway.Foundation
@using ThingsGateway.Admin.Application
@using ThingsGateway.Admin.Razor
@using ThingsGateway.Gateway.Application
@using ThingsGateway.Plugin.SqlDB
@namespace ThingsGateway.Plugin.DB

<ValidateForm Model="Model.PluginPropertyModel.Value" @ref=Model.PluginPropertyModel.ValidateForm Id="@Model.Id.ToString()">

    <EditorFormObject class="p-2" Items=PluginPropertyEditorItems AutoGenerateAllItem="false" RowType=RowType.Inline ItemsPerRow=2 ShowLabelTooltip=true LabelWidth=250 Model="Model.PluginPropertyModel.Value" @key=Model.PluginPropertyModel.Value.GetType().TypeHandle.Value>
        <FieldItems>
            @if (Model.PluginPropertyModel.Value is RealDBProducerProperty businessProperty)
            {
                <EditorItem FieldExpression=@(()=>context) Field=@(context)>

                    <EditTemplate Context="value">
                        <div class="col-12  col-md-12">
                            <BootstrapLabel Value=@RealDBProducerPropertyLocalizer["BigTextScriptHistoryTable"] ShowLabelTooltip="true" />
                            <CodeEditor @bind-Value=@businessProperty.BigTextScriptHistoryTable Language="csharp" Theme="vs-dark" />
                        </div>

                    </EditTemplate>
                </EditorItem>
            }
        </FieldItems>
    </EditorFormObject>
</ValidateForm>

@code{

    [Parameter, EditorRequired]
    public Device Model { get; set; }
    [Parameter, EditorRequired]
    public IEnumerable<IEditorItem> PluginPropertyEditorItems { get; set; }

    IStringLocalizer RealDBProducerPropertyLocalizer { get; set; }

    protected override Task OnParametersSetAsync()
    {
        RealDBProducerPropertyLocalizer = App.CreateLocalizerByType(Model.PluginPropertyModel.Value.GetType());

        return base.OnParametersSetAsync();
    }
}
